{"version":3,"sources":["basics/styled.js","basics/index.js","helpers/index.js","definitions/index.js","components/WeatherCard/styled.js","components/WeatherCard/index.js","hooks/useForecast.js","hooks/useApiIp.js","assets/image-weather.webp","app/styled.js","app/index.js","reportWebVitals.js","index.js"],"names":["FieldGroup","styled","div","FieldSelect","select","SelectField","id","options","onChange","value","tabIndex","useState","optionSelected","setOptionSelected","useEffect","name","e","target","map","option","index","label","country","splitArray","array","week","day","length","push","uuidv4","items","replace","c","r","Math","random","toString","getDay","date","year","substr","month","dayOfTheWeek","Date","getUTCDay","widths","unit","breakpoints","mobile","phablet","tablet","tabletXL","desktop","laptop","wide","CardContainer","ActualWeather","Temperature","h1","Degrees","span","ContainerWeather","ContainerData","ContainerDescription","Description","Humidity","WindSpeed","Rectangle","ForecastCard","TemperatureForecast","h3","Day","h2","ContainerDetailsForecast","ContainerIcon","WeatherCard","city","setCity","weatherDay","setWeatherDay","forecast","setForecast","getForecast","useCallback","a","API_URL","fetch","response","json","data","console","log","list","useForecast","ipData","setIpData","getIp","then","jsonData","country_name","catch","error","useApiIp","cities","handleShowField","field","item","style","display","main","temp","width","height","alt","src","weather","icon","fontWeight","description","humidity","wind","speed","toFixed","dt_txt","fontSize","AppContainer","BackgroundImage","img","weatherImage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0286986a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FieldGroup = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmin-width: 50%;\r\n\r\n\tselect {\r\n\t\theight: 3.8rem;\r\n\r\n\t\toption {\r\n\t\t\tpadding: auto;\r\n\t\t\tmargin: auto;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const FieldSelect = styled.select`\r\n    display: flex;\r\n    color: white;\r\n    font-size: 2rem;\r\n    align-self: center;\r\n\ttext-align-last: center;\r\n\r\n\tborder: 1px solid white;\r\n\tbackground: transparent;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 1rem;\r\n\theight: 3.8rem;\r\n\tpadding: 0 1rem;\r\n\twidth: 100%;\r\n\r\n\toption {\r\n\t\tcolor: black;\r\n\t}\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { FieldSelect, FieldGroup } from './styled.js';\r\n\r\nexport function SelectField({\r\n\tid,\r\n\toptions,\r\n\tonChange,\r\n\tvalue,\r\n\ttabIndex,\r\n}) {\r\n\r\n\tconst [optionSelected, setOptionSelected] = useState();\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (value)\r\n\t\t{\r\n\t\t\tsetOptionSelected(value);\r\n\t\t}\r\n\t\t\r\n\t}, [value])\r\n\r\n\tconst handleOptionSelected = (target) => {\r\n\r\n\t\tsetOptionSelected(target.value)\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FieldGroup >\r\n\t\t\t<FieldSelect\r\n\t\t\t\tvalue={optionSelected}\r\n\t\t\t\ttabIndex={tabIndex}\r\n\t\t\t\tname={id}\r\n\t\t\t\tid={id}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleOptionSelected(e.target);\r\n\r\n\t\t\t\t\tonChange && onChange(id, e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{options.map((option, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<option key={index} value={option.value}>\r\n\t\t\t\t\t\t\t{option.label}, {option.country}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</FieldSelect>\r\n\t\t</FieldGroup>\r\n\t);\r\n}","export function splitArray(array) {\r\n\r\n  const week = [];\r\n  const day = [];\r\n\r\n  for (let index = 8; index < array.length; index += 8) {\r\n    week.push({ id: uuidv4(), items: [array[index]] });\r\n  }\r\n\r\n  week.push({ id: uuidv4(), items: [array[array.length - 1]] });\r\n\r\n  day.push({ id: uuidv4(), items: [array[0]] });\r\n\r\n  return { week, day };\r\n}\r\n\r\nexport function uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    // eslint-disable-next-line no-bitwise\r\n    const r = (Math.random() * 16) | 0;\r\n    // eslint-disable-next-line no-bitwise\r\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function getDay(date){\r\n  const days=[\"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"SÃ¡bado\"];\r\n\r\n  const year = date.substr(0,4)\r\n  const month = date.substr(5,2)\r\n  const day = date.substr(8, 2)\r\n\r\n  var dt = new Date(month+' '+day+', '+year+' 12:00:00');\r\n  const dayOfTheWeek = days[dt.getUTCDay()];\r\n  \r\n  return { dayOfTheWeek };\r\n};\r\n\r\n","export const colors = {\r\n\tborders: {\r\n\t},\r\n\tfonts: {\r\n\t\twhite: `#FFFFFF` ,\r\n\t},\r\n\tbackground: {\r\n\t\twhite: `#FFFFFF` ,\r\n\t},\r\n\thover: {\r\n\t},\r\n\tdisabled: {\r\n\t\tfirst: `#DDDDDD`,\r\n\t},\r\n};\r\n\r\nexport const widths = {\r\n\tmobile: 320,\r\n\tphablet: 520,\r\n\ttablet: 768,\r\n\ttabletXL: 896,\r\n\tdesktop: 992,\r\n\tlaptop: 1024,\r\n\twide: 1312\r\n};\r\n\r\nconst unit = \"px\";\r\n\r\nexport const breakpoints = {\r\n\tmobile: `@media screen and (max-width: ${widths.mobile}${unit})`,\r\n\tphablet: `@media screen and (max-width: ${widths.phablet}${unit})`,\r\n\ttablet: `@media screen and (max-width: ${widths.tablet}${unit})`,\r\n\ttabletXL: `@media screen and (max-width: ${widths.tabletXL}${unit})`,\r\n\tdesktop: `@media screen and (max-width: ${widths.desktop}${unit})`,\r\n\tlaptop: `@media screen and (max-width: ${widths.laptop}${unit})`,\r\n\twide: `@media screen and (max-width: ${widths.wide}${unit})`\r\n};","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../../definitions\";\r\n\r\nexport const CardContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n    width: 100%; \r\n    height: 100%;\r\n    background-color: rgba(255, 255, 255, .15);  \r\n    backdrop-filter: blur(5px);\r\n    align-items: center;\r\n    position: relative;\r\n    padding: 2rem;\r\n    min-height: 90vh;\r\n    justify-content: center;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\theight: auto;\r\n        padding: 3rem 0;\r\n\t}\r\n`;\r\n\r\nexport const ActualWeather = styled.div`\r\n\tdisplay: flex;\r\n    min-width: 22.68;\r\n    width: 95%;\r\n    height: 50%;\r\n    background-color: rgba(0, 0, 0, .15);\r\n    border-radius: 2rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    margin-bottom: 2rem;\r\n\r\n    padding: 2rem;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\tflex-direction: column;\r\n        min-width: auto;\r\n\t}\r\n`;\r\n\r\nexport const Temperature = styled.h1`\r\n    display: flex;\r\n    color: white;\r\n    justify-self: center;\r\n    font-size: 7rem;\r\n    align-self: center;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\tfont-size: 5rem;\r\n\t}\r\n`;\r\n\r\nexport const Degrees = styled.span`\r\n    display: flex;\r\n    color: white;\r\n    font-size: 2rem;\r\n    align-self: top;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nexport const ContainerWeather = styled.div`\r\n    display: flex;\r\n    height: min-content;\r\n    flex-basis: 40%;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ContainerData = styled.div`\r\n    display: flex;\r\n    width: 50%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const ContainerDescription = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 75%;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\theight: 25rem;\r\n\t}\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    display: flex;\r\n    color: white;\r\n    flex-direction: column;\r\n    justify-self: flex-end;\r\n    text-transform: capitalize;\r\n    align-items: center;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n`;\r\n\r\nexport const Humidity = styled.span`\r\n    display: flex;\r\n    color: white;\r\n    justify-self: flex-end;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    align-items: center;\r\n    gap: 1rem;\r\n`;\r\n\r\nexport const WindSpeed = styled.span`\r\n    display: flex;\r\n    color: white;\r\n    justify-self: flex-end;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n`;\r\n\r\nexport const Rectangle = styled.div`\r\n\tdisplay: flex;\r\n    width: 95%;\r\n    min-height: 30%;\r\n    height: auto;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border-radius: 1rem;\r\n    align-items: center;\r\n\r\n    padding: 1rem;\r\n\r\n    color: white;\r\n    \r\n    ${breakpoints.tabletXL} {\r\n\t\tflex-direction: column;\r\n        margin-top: 3rem;\r\n\t}\r\n`;\r\n\r\nexport const ForecastCard = styled.div`\r\n    display: flex;\r\n    width: 20%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\tflex-direction: row;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        padding: 1rem;\r\n\t}\r\n\r\n`;\r\n\r\nexport const TemperatureForecast = styled.h3`\r\n    display: flex;\r\n    color: white;\r\n    justify-self: center;\r\n    font-size: 3rem;\r\n    align-self: center;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n\r\nexport const Day = styled.h2`\r\n    display: flex;\r\n    color: white;\r\n    justify-self: center;\r\n    font-size: 2rem;\r\n    justify-self: flex-start;\r\n    font-weight: 400;\r\n    margin: 0;\r\n`;\r\n\r\nexport const ContainerDetailsForecast = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-width: 40%;\r\n\r\n    ${breakpoints.tabletXL} {\r\n\t\tflex-direction: row;\r\n        justify-content: flex-end;\r\n        min-width:0;\r\n        gap: 2rem;\r\n\t}\r\n`;\r\n\r\nexport const ContainerIcon = styled.div`\r\n    display: flex;\r\n    height: 5rem;\r\n    width: 5rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    ${breakpoints.phablet} {\r\n\t\tdisplay: none;\r\n\t}\r\n`;","import React, { useState } from 'react'\r\nimport { SelectField } from '../../basics/index.js';\r\nimport { getDay } from '../../helpers/index.js';\r\nimport useApiIp from '../../hooks/useApiIp.js';\r\nimport useForecast from '../../hooks/useForecast.js';\r\nimport { \r\n  CardContainer, \r\n  ActualWeather, \r\n  Rectangle, \r\n  ForecastCard, \r\n  Temperature, \r\n  Description, \r\n  Humidity,\r\n  WindSpeed,\r\n  Degrees, \r\n  ContainerWeather, \r\n  ContainerDescription,\r\n  ContainerData,\r\n  TemperatureForecast,\r\n  Day,\r\n  ContainerDetailsForecast,\r\n  ContainerIcon } from './styled.js';\r\n\r\nexport default function WeatherCard() {\r\n\r\n  const [city, setCity] = useState(\"Buenos Aires\")\r\n\r\n  const { forecast, weatherDay } = useForecast(city)\r\n\r\n  const { ipData } = useApiIp()\r\n\r\n  const cities = [\r\n    {\r\n      id: 1,\r\n      label: `${ipData.city}`,\r\n      country: `${ipData.country}`\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Londres',\r\n      country: 'Inglaterra'\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'Madrid',\r\n      country: 'EspaÃ±a'\r\n    },\r\n    {\r\n      id: 4,\r\n      label: 'Roma',\r\n      country: 'Italia'\r\n    },\r\n    {\r\n      id: 5,\r\n      label: 'Tokio',\r\n      country: 'JapÃ³n'\r\n    },\r\n    {\r\n      id: 6,\r\n      label: 'ParÃ­s',\r\n      country: 'Francia'\r\n    }\r\n  ]\r\n\r\n  const handleShowField = (field, label) => {\r\n    setCity(label);\r\n  };\r\n\r\n    return (\r\n        <CardContainer>\r\n          {weatherDay.map((item, index) => {\r\n            return (\r\n              <ActualWeather key={index}>\r\n                <ContainerWeather>\r\n                  <div>\r\n                    <Day>Hoy</Day>\r\n                  </div>\r\n                  <div style={{display: \"flex\"}}>\r\n                    <Temperature>{item.items[0].main.temp}</Temperature>\r\n                    <Degrees>Â°C</Degrees>\r\n                  </div>\r\n                  <SelectField id={cities.id} options={cities} onChange={handleShowField} value={cities.label} />\r\n                </ContainerWeather>\r\n\r\n                <ContainerData>\r\n\r\n                  <ContainerDescription>\r\n\r\n                    <Description>\r\n\r\n                      <img style={{width: \"7rem\", height: \"7rem\"}} alt=\"iconWeather\" src={`http://openweathermap.org/img/w/${item.items[0].weather[0].icon}.png`}></img>\r\n\r\n                      <span style={{fontWeight: \"400\"}}>{item.items[0].weather[0].description}</span>\r\n\r\n                    </Description>\r\n\r\n                    <Humidity>Humedad: {item.items[0].main.humidity} %</Humidity>\r\n\r\n                    <WindSpeed>Velocidad del viento: {((item.items[0].wind.speed)*3.6).toFixed(1)} km/h</WindSpeed>\r\n\r\n                  </ContainerDescription>\r\n\r\n                </ContainerData>\r\n              </ActualWeather>\r\n            )})}\r\n\r\n          \r\n            <Rectangle>\r\n            {forecast.map((item, index) => {\r\n            return (\r\n              <ForecastCard key={index}>\r\n                <div style={{width: \"auto\"}}>\r\n                  <Day>{getDay(item.items[0].dt_txt).dayOfTheWeek}</Day>\r\n                </div>\r\n                \r\n                <ContainerDetailsForecast>\r\n                  <ContainerIcon>\r\n                    <img style={{width: \"100%\", height: \"100%\"}} alt=\"iconWeather\" src={`http://openweathermap.org/img/w/${item.items[0].weather[0].icon}.png`}></img>\r\n                  </ContainerIcon>\r\n                  <div style={{display: \"flex\", width: \"7rem\",}}>\r\n                    <TemperatureForecast>{item.items[0].main.temp}</TemperatureForecast>\r\n                    <Degrees style={{fontSize: \"1rem\"}}>Â°C</Degrees>\r\n                  </div>\r\n                </ContainerDetailsForecast>\r\n              </ForecastCard> \r\n            )\r\n          })}\r\n            </Rectangle>\r\n        </CardContainer>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { splitArray } from '../helpers/index.js';\r\n\r\nexport default function useForecast( city ) {\r\n\r\n    const [weatherDay, setWeatherDay] = useState([])\r\n    const [forecast, setForecast] = useState([])\r\n\r\n\r\n    const getForecast = useCallback(async () => {\r\n      const KEY = \"25946a96a86f0c7a2ca0b83890dd30ef\";\r\n      const cityValue = city;\r\n  \r\n      const API_URL = `http://api.openweathermap.org/data/2.5/forecast?q=${cityValue}&appid=${KEY}&lang=sp&units=metric`\r\n      const response = await fetch(API_URL);\r\n      const data = await response.json();\r\n\r\n      console.log(data)\r\n  \r\n      setWeatherDay(splitArray(data.list).day)\r\n      setForecast(splitArray(data.list).week)\r\n\r\n    }, [city])\r\n\r\n    useEffect(() => {\r\n      getForecast();\r\n    }, [getForecast, city])\r\n\r\n  return {forecast, weatherDay}\r\n}","import { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function useApiIp() {\r\n\r\n  const [ipData, setIpData] = useState({ city: '', country: '' })\r\n    \r\n  const getIp = useCallback(async () => {\r\n    return fetch('https://ipapi.co/json/')\r\n    .then(function(response) {\r\n      response.json().then(jsonData => {\r\n        setIpData(() => {return { city: `${jsonData.city}`, country: `${jsonData.country_name}`}})\r\n      });\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error)\r\n    });\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    getIp();\r\n  },[getIp])\r\n\r\n  return { ipData }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image-weather.58311654.webp\";","import styled from 'styled-components';\nimport weatherImage from '../assets/image-weather.webp'\n\nexport const AppContainer = styled.div`\n\tdisplay: flex;\n\tmin-height: 100vh;\n\theight: auto;\n\twidth: 100vw;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: relative;\n`;\n\nexport const BackgroundImage = styled.img`\n\tbackground: url(${weatherImage});\n\tbackground-position: bottom;\n\tbackground-size: cover;\n\tfilter: brightness(50%);\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n`;","import WeatherCard from '../components/WeatherCard/index.js';\nimport { BackgroundImage, AppContainer } from './styled.js';\n\nexport default function App() {\n  return (\n    <AppContainer>\n        <BackgroundImage />\n        <WeatherCard/>\n\t\t</AppContainer>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/index';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { normalize } from 'styled-normalize'\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\n\n\thtml {\n\t\tbox-sizing: border-box;\n\t\tscroll-behavior: smooth;\n\t}\n\n\t*:focus {\n\t\toutline: 0 !important;\n\t}\n\n\t*,\n\t*:before,\n\t*:after {\n\t\tbox-sizing: inherit;\n\t}\n\n\tbody {\n\t\tfont-family: 'Oswald';\n\t\tfont-style: normal;\n\t\tfont-size: 1.4rem;\n\t\tline-height: 2.5rem;\n\t\tbackground: #ffffff;\n\t\tmargin: 0;\n\t\toverflow-x: hidden;\n\t}\n`;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}